package com.inno.modelview.dao.impl.DummyData;


import com.inno.modelview.model.CoreEntity;

import java.util.ArrayList;
import java.util.List;

public class PopulatorDummyData implements IPopulatorDummnyData {

    @Override
    public List<CoreEntity> populateEntites() {
        List<CoreEntity> coreEntities = new ArrayList<>();
        coreEntities.add(new CoreEntity("Claim", "**For Policy perspective**, we offer many more built-in car insurance discounts, such as safe driver, pay-in-full, multi-car, etc.</br>You'll automatically get these during your auto insurance quote no matter if you buy online or on the phone.</br>Just get a free car insurance quote, and we'll find all these savings for you. You won't have to do or say anything else. Easy.</p>", "<pre><code class='java'>public class ClassLazyTypeResolver extends LazyTypeResolver {\\r  // Predefined resolvers for frequently used classes\\r  public static final ClassLazyTypeResolver Object = new ClassLazyTypeResolver( Object.class );\\r  public static final ClassLazyTypeResolver String = new ClassLazyTypeResolver( String.class );\\r  ... // many more\\r \\r  private final Class _class;\\r \\r  public ClassLazyTypeResolver( Class type ) {\\r    _class = type;\\r  }\\r  \\r  @Override\\r  protected IType init() {\\r    return TypeSystem.get( _class );\\r  }\\r  public static java.lang.String getCachedFieldName( Class cls ) {\\r    String fieldName = cls.getSimpleName();\\r    try {\\r      for( Field f: ClassLazyTypeResolver.class.getDeclaredFields() ) {\\r        if( f.getName().equals( fieldName ) && ((ClassLazyTypeResolver)f.get( null ))._class == cls ) {\\r          return fieldName;\\r        }\\r      }\\r      return null;\\r    }\\r\\n    catch( IllegalAccessException e ) {\\r      throw new RuntimeException( e );\\r    }\\r  }\\r}</code></pre>", null));
        coreEntities.add(new CoreEntity("Policy", "**For Policy perspective**, we offer many more built-in car insurance discounts, such as safe driver, pay-in-full, multi-car, etc.</br>You'll automatically get these during your auto insurance quote no matter if you buy online or on the phone.</br>Just get a free car insurance quote, and we'll find all these savings for you. You won't have to do or say anything else. Easy.</p>", "<pre><code class='java'>public class ClassLazyTypeResolver extends LazyTypeResolver {\\r  // Predefined resolvers for frequently used classes\\r  public static final ClassLazyTypeResolver Object = new ClassLazyTypeResolver( Object.class );\\r  public static final ClassLazyTypeResolver String = new ClassLazyTypeResolver( String.class );\\r  ... // many more\\r \\r  private final Class _class;\\r \\r  public ClassLazyTypeResolver( Class type ) {\\r    _class = type;\\r  }\\r  \\r  @Override\\r  protected IType init() {\\r    return TypeSystem.get( _class );\\r  }\\r  public static java.lang.String getCachedFieldName( Class cls ) {\\r    String fieldName = cls.getSimpleName();\\r    try {\\r      for( Field f: ClassLazyTypeResolver.class.getDeclaredFields() ) {\\r        if( f.getName().equals( fieldName ) && ((ClassLazyTypeResolver)f.get( null ))._class == cls ) {\\r          return fieldName;\\r        }\\r      }\\r      return null;\\r    }\\r\\n    catch( IllegalAccessException e ) {\\r      throw new RuntimeException( e );\\r    }\\r  }\\r}</code></pre>", null));
        coreEntities.add(new CoreEntity("Stock", "**For Stock perspective**, we offer many more built-in car insurance discounts, such as safe driver, pay-in-full, multi-car, etc.</br>You'll automatically get these during your auto insurance quote no matter if you buy online or on the phone.</br>Just get a free car insurance quote, and we'll find all these savings for you. You won't have to do or say anything else. Easy.</p>", "<pre><code class='java'>public class ClassLazyTypeResolver extends LazyTypeResolver {\\r  // Predefined resolvers for frequently used classes\\r  public static final ClassLazyTypeResolver Object = new ClassLazyTypeResolver( Object.class );\\r  public static final ClassLazyTypeResolver String = new ClassLazyTypeResolver( String.class );\\r  ... // many more\\r \\r  private final Class _class;\\r \\r  public ClassLazyTypeResolver( Class type ) {\\r    _class = type;\\r  }\\r  \\r  @Override\\r  protected IType init() {\\r    return TypeSystem.get( _class );\\r  }\\r  public static java.lang.String getCachedFieldName( Class cls ) {\\r    String fieldName = cls.getSimpleName();\\r    try {\\r      for( Field f: ClassLazyTypeResolver.class.getDeclaredFields() ) {\\r        if( f.getName().equals( fieldName ) && ((ClassLazyTypeResolver)f.get( null ))._class == cls ) {\\r          return fieldName;\\r        }\\r      }\\r      return null;\\r    }\\r\\n    catch( IllegalAccessException e ) {\\r      throw new RuntimeException( e );\\r    }\\r  }\\r}</code></pre>", null));
        coreEntities.add(new CoreEntity("NodeJS", "**For Policy perspective**, we offer many more built-in car insurance discounts, such as safe driver, pay-in-full, multi-car, etc.</br>You'll automatically get these during your auto insurance quote no matter if you buy online or on the phone.</br>Just get a free car insurance quote, and we'll find all these savings for you. You won't have to do or say anything else. Easy.</p>", "<pre><code class='java'>public class ClassLazyTypeResolver extends LazyTypeResolver {\\r  // Predefined resolvers for frequently used classes\\r  public static final ClassLazyTypeResolver Object = new ClassLazyTypeResolver( Object.class );\\r  public static final ClassLazyTypeResolver String = new ClassLazyTypeResolver( String.class );\\r  ... // many more\\r \\r  private final Class _class;\\r \\r  public ClassLazyTypeResolver( Class type ) {\\r    _class = type;\\r  }\\r  \\r  @Override\\r  protected IType init() {\\r    return TypeSystem.get( _class );\\r  }\\r  public static java.lang.String getCachedFieldName( Class cls ) {\\r    String fieldName = cls.getSimpleName();\\r    try {\\r      for( Field f: ClassLazyTypeResolver.class.getDeclaredFields() ) {\\r        if( f.getName().equals( fieldName ) && ((ClassLazyTypeResolver)f.get( null ))._class == cls ) {\\r          return fieldName;\\r        }\\r      }\\r      return null;\\r    }\\r\\n    catch( IllegalAccessException e ) {\\r      throw new RuntimeException( e );\\r    }\\r  }\\r}</code></pre>", null));
        coreEntities.add(new CoreEntity("AngularJS", "**For Policy perspective**, we offer many more built-in car insurance discounts, such as safe driver, pay-in-full, multi-car, etc.</br>You'll automatically get these during your auto insurance quote no matter if you buy online or on the phone.</br>Just get a free car insurance quote, and we'll find all these savings for you. You won't have to do or say anything else. Easy.</p>", "<pre><code class='java'>public class ClassLazyTypeResolver extends LazyTypeResolver {\\r  // Predefined resolvers for frequently used classes\\r  public static final ClassLazyTypeResolver Object = new ClassLazyTypeResolver( Object.class );\\r  public static final ClassLazyTypeResolver String = new ClassLazyTypeResolver( String.class );\\r  ... // many more\\r \\r  private final Class _class;\\r \\r  public ClassLazyTypeResolver( Class type ) {\\r    _class = type;\\r  }\\r  \\r  @Override\\r  protected IType init() {\\r    return TypeSystem.get( _class );\\r  }\\r  public static java.lang.String getCachedFieldName( Class cls ) {\\r    String fieldName = cls.getSimpleName();\\r    try {\\r      for( Field f: ClassLazyTypeResolver.class.getDeclaredFields() ) {\\r        if( f.getName().equals( fieldName ) && ((ClassLazyTypeResolver)f.get( null ))._class == cls ) {\\r          return fieldName;\\r        }\\r      }\\r      return null;\\r    }\\r\\n    catch( IllegalAccessException e ) {\\r      throw new RuntimeException( e );\\r    }\\r  }\\r}</code></pre>", null));
        coreEntities.add(new CoreEntity("JAVA", "**For Policy perspective**, we offer many more built-in car insurance discounts, such as safe driver, pay-in-full, multi-car, etc.</br>You'll automatically get these during your auto insurance quote no matter if you buy online or on the phone.</br>Just get a free car insurance quote, and we'll find all these savings for you. You won't have to do or say anything else. Easy.</p>", "<pre><code class='java'>public class ClassLazyTypeResolver extends LazyTypeResolver {\\r  // Predefined resolvers for frequently used classes\\r  public static final ClassLazyTypeResolver Object = new ClassLazyTypeResolver( Object.class );\\r  public static final ClassLazyTypeResolver String = new ClassLazyTypeResolver( String.class );\\r  ... // many more\\r \\r  private final Class _class;\\r \\r  public ClassLazyTypeResolver( Class type ) {\\r    _class = type;\\r  }\\r  \\r  @Override\\r  protected IType init() {\\r    return TypeSystem.get( _class );\\r  }\\r  public static java.lang.String getCachedFieldName( Class cls ) {\\r    String fieldName = cls.getSimpleName();\\r    try {\\r      for( Field f: ClassLazyTypeResolver.class.getDeclaredFields() ) {\\r        if( f.getName().equals( fieldName ) && ((ClassLazyTypeResolver)f.get( null ))._class == cls ) {\\r          return fieldName;\\r        }\\r      }\\r      return null;\\r    }\\r\\n    catch( IllegalAccessException e ) {\\r      throw new RuntimeException( e );\\r    }\\r  }\\r}</code></pre>", null));
        coreEntities.add(new CoreEntity("Python", "**For Policy perspective**, we offer many more built-in car insurance discounts, such as safe driver, pay-in-full, multi-car, etc.</br>You'll automatically get these during your auto insurance quote no matter if you buy online or on the phone.</br>Just get a free car insurance quote, and we'll find all these savings for you. You won't have to do or say anything else. Easy.</p>", "<pre><code class='java'>public class ClassLazyTypeResolver extends LazyTypeResolver {\\r  // Predefined resolvers for frequently used classes\\r  public static final ClassLazyTypeResolver Object = new ClassLazyTypeResolver( Object.class );\\r  public static final ClassLazyTypeResolver String = new ClassLazyTypeResolver( String.class );\\r  ... // many more\\r \\r  private final Class _class;\\r \\r  public ClassLazyTypeResolver( Class type ) {\\r    _class = type;\\r  }\\r  \\r  @Override\\r  protected IType init() {\\r    return TypeSystem.get( _class );\\r  }\\r  public static java.lang.String getCachedFieldName( Class cls ) {\\r    String fieldName = cls.getSimpleName();\\r    try {\\r      for( Field f: ClassLazyTypeResolver.class.getDeclaredFields() ) {\\r        if( f.getName().equals( fieldName ) && ((ClassLazyTypeResolver)f.get( null ))._class == cls ) {\\r          return fieldName;\\r        }\\r      }\\r      return null;\\r    }\\r\\n    catch( IllegalAccessException e ) {\\r      throw new RuntimeException( e );\\r    }\\r  }\\r}</code></pre>", null));
        coreEntities.add(new CoreEntity("GO", "**For Policy perspective**, we offer many more built-in car insurance discounts, such as safe driver, pay-in-full, multi-car, etc.</br>You'll automatically get these during your auto insurance quote no matter if you buy online or on the phone.</br>Just get a free car insurance quote, and we'll find all these savings for you. You won't have to do or say anything else. Easy.</p>", "<pre><code class='java'>public class ClassLazyTypeResolver extends LazyTypeResolver {\\r  // Predefined resolvers for frequently used classes\\r  public static final ClassLazyTypeResolver Object = new ClassLazyTypeResolver( Object.class );\\r  public static final ClassLazyTypeResolver String = new ClassLazyTypeResolver( String.class );\\r  ... // many more\\r \\r  private final Class _class;\\r \\r  public ClassLazyTypeResolver( Class type ) {\\r    _class = type;\\r  }\\r  \\r  @Override\\r  protected IType init() {\\r    return TypeSystem.get( _class );\\r  }\\r  public static java.lang.String getCachedFieldName( Class cls ) {\\r    String fieldName = cls.getSimpleName();\\r    try {\\r      for( Field f: ClassLazyTypeResolver.class.getDeclaredFields() ) {\\r        if( f.getName().equals( fieldName ) && ((ClassLazyTypeResolver)f.get( null ))._class == cls ) {\\r          return fieldName;\\r        }\\r      }\\r      return null;\\r    }\\r\\n    catch( IllegalAccessException e ) {\\r      throw new RuntimeException( e );\\r    }\\r  }\\r}</code></pre>", null));
        return coreEntities;
    }

}
